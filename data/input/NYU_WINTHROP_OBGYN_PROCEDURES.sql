CREATE OR REPLACE PROCEDURE NYU_WINTHROP_OBGYN_PROCEDURES

(
  BEG_DATE IN VARCHAR2
, END_DATE IN VARCHAR2
, P_RECORDSET OUT SYS_REFCURSOR

)

AS

BEGIN

DECLARE

BEG_DT DATE;
END_DT DATE;

BEGIN

BEG_DT := EPIC_UTIL.EFN_DIN(BEG_DATE);
END_DT := EPIC_UTIL.EFN_DIN(END_DATE); 

OPEN  P_RECORDSET FOR

SELECT * FROM(
SELECT    PATIENT.PAT_MRN_ID
        , HSP_ACCOUNT.PRIM_ENC_CSN_ID
        , HSP_ACCOUNT.HSP_ACCOUNT_ID
        , PATIENT.PAT_NAME
        , HSP_ACCOUNT.ADM_DATE_TIME
        , HSP_ACCT_PX_LIST.PROC_DATE
        , HSP_ACCOUNT.DISCH_DATE_TIME
--        , CL_ICD_PX.ICD_PX_ID
        , CL_ICD_PX.REF_BILL_CODE
        , CL_ICD_PX.PROCEDURE_NAME
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END AS PROV_ID
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_NAME ELSE CLARITY_SER.PROV_NAME END AS PROV_NAME
--        , (SELECT   LISTAGG(ZC_SPECIALTY.NAME, ';') WITHIN GROUP (ORDER BY CLARITY_SER_SPEC.LINE)
--           FROM     CLARITY_SER_SPEC
--                    JOIN ZC_SPECIALTY ON CLARITY_SER_SPEC.SPECIALTY_C = ZC_SPECIALTY.SPECIALTY_C
--           WHERE    CLARITY_SER_SPEC.PROV_ID = CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) AS SPEC
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.SPEC ELSE PRACT_PERF.SPEC END AS SPEC
        --BELOW REPLACED WITH A VIEW NYU_WINTHROP_OBGYN_PRACTICE
        --this case statment puts the attending provider into a practice not maintained in epic.  The goal is to not have a provider fall out to the *NOT CATEOGORIEZED part.
--        , CASE WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('809595','865959','865916','801663','807751','808357','866022','806322','803697','804035','865956','866071','866068','4735','866658',
--                                                                                                                       '26226','803372','896590','866691','81532','803594','865668','865318','866663','896989','865994','806129','806842') THEN 'SINGLE PROVIDERS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('865946','802778') THEN 'BEHAR AND LINDER'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('802362','804480','897200','898505') THEN 'BLINDERMAN AND KING'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('805330','5763') THEN 'BYRNE AND SALEH'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('866656','865992') THEN 'DOLISI AND HANAUER'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('821959','865860','27050','27678','26219','27055') THEN 'HOSPITALISTS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('2637','820746','25905','866018') THEN 'HUNTINGTON MEDICAL GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('897745','866660','866662','39508','7653','866052','894068') THEN 'L.I WOMENS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('866549','45693','10044') THEN 'MADONNA PROVIDERS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('804928','27288') THEN 'MESBAH AND WAT'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('22865','26218','1252','864871','861174','865532','861143','22864','861173','865933','27679','45860','815606') THEN 'MFM'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('866655','805854','813869','866673','7346') THEN 'MILLER/DILENA GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('30674','866674','866672','6955') THEN 'PLANCHER GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('814313','805593') THEN 'ROBERTS AND LAZAROU'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('895288','810027','895419') THEN 'THANUS GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('34259','865984','10582','865942','865938','866712','804839','865553','865940','866676','20156','894057','895419') THEN 'WCCA'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('848131','865939','890978','37502','13296','894057') THEN 'WINTHROP GYN ONCOLOGY'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('860034','865486','37502') THEN 'WWW'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('865991','17329','894435') THEN 'ZANDIEH AND TUTUNIK'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('42621','866473','896864','821032') THEN 'RSNY'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('865686','865683') THEN 'NYU WOWMENS HEALTH NHP'
--               ELSE '*NOT CATEGORIZED' END AS PRACTICE
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.PRACTICE ELSE PRACT_PERF.PRACTICE END AS PRACTICE
        , CASE WHEN CAST(TO_CHAR(HSP_ACCT_PX_LIST.PROC_DATE, 'MM')AS INT) IN (9,10,11,12) THEN CAST(TO_CHAR(HSP_ACCT_PX_LIST.PROC_DATE, 'MM')AS INT) - 8 
               ELSE CAST(TO_CHAR(HSP_ACCT_PX_LIST.PROC_DATE, 'MM')AS INT) + 4 END FY_MTH_SORT
        , CASE WHEN HSP_ACCT_PX_LIST.PROC_DATE >= DATE_RANGE.FY_BEG_DT AND HSP_ACCT_PX_LIST.PROC_DATE < DATE_RANGE.FY_END_DT+1 THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS FY_HAR
        , CASE WHEN HSP_ACCT_PX_LIST.PROC_DATE >= DATE_RANGE.BEG_DATE AND HSP_ACCT_PX_LIST.PROC_DATE < END_DT+1 THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS CY_HAR
        , TO_CHAR(HSP_ACCT_PX_LIST.PROC_DATE, 'MON') AS MTH
        , CAST(TO_CHAR(HSP_ACCT_PX_LIST.PROC_DATE, 'MM')AS INT) AS MONTH_NUMBER
        , DATE_RANGE.FY_BEG_DT
        , DATE_RANGE.FY_END_DT
        , CLARITY_DEP.DEPARTMENT_NAME
        , CLARITY_LOC.LOC_NAME
        , 'IP' AS PAT_TYPE
        , ROW_NUMBER() OVER (PARTITION BY HSP_ACCOUNT.HSP_ACCOUNT_ID ORDER BY HSP_ACCT_PX_LIST.LINE) AS RoNo

FROM    HSP_ACCOUNT 
        JOIN HSP_ACCT_PX_LIST ON HSP_ACCOUNT.HSP_ACCOUNT_ID = HSP_ACCT_PX_LIST.HSP_ACCOUNT_ID
        JOIN CL_ICD_PX ON HSP_ACCT_PX_LIST.FINAL_ICD_PX_ID = CL_ICD_PX.ICD_PX_ID
        JOIN PATIENT ON HSP_ACCOUNT.PAT_ID = PATIENT.PAT_ID
        JOIN CLARITY_DEP ON HSP_ACCOUNT.DISCH_DEPT_ID = CLARITY_DEP.DEPARTMENT_ID
        JOIN CLARITY_LOC ON CLARITY_DEP.REV_LOC_ID = CLARITY_LOC.LOC_ID
        --This subquery takes the beginning and ending date parameters and converts it to either the earrlier of the calendar year begininng or the fiscal year beginning
        JOIN (SELECT    PASS.*
                      , CASE WHEN PASS.BEG_DATE < PASS.FY_BEG_DT THEN PASS.BEG_DATE ELSE PASS.FY_BEG_DT END BG_DT
              FROM(
              SELECT    DATE_DIMENSION.CALENDAR_DT
                      , DATE_DIMENSION.YEAR_BEGIN_DT
                      , DATE_DIMENSION.MONTH_NUMBER
                      , DATE_DIMENSION.MONTH_NAME
                      , DATE_DIMENSION.MONTH_BEGIN_DT AS PREV_MTH_BEG
                      , DATE_DIMENSION.MONTH_END_DT AS PREV_MTH_END
                      , DATE_DIMENSION.YEAR
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.YEAR + 1 ELSE DATE_DIMENSION.YEAR END AS FISCAL_YEAR
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 THEN DATE_DIMENSION.MONTH_BEGIN_DT
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT - 394
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT - 395
                             ELSE ADD_MONTHS(DATE_DIMENSION.USA_FISCAL_YEAR_BEGIN_DT,-1) END AS FY_BEG_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT + 336
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT + 335
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 THEN DATE_DIMENSION.MONTH_END_DT ELSE ADD_MONTHS(DATE_DIMENSION.USA_FISCAL_YEAR_END_DT,-1) END AS FY_END_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.YEAR_BEGIN_DT
                             ELSE ADD_MONTHS(DATE_DIMENSION.YEAR_BEGIN_DT, -12) END AS BEG_DATE
                      , ADD_MONTHS(DATE_DIMENSION.YEAR_BEGIN_DT, -12) AS CY_BEG_DATE
              FROM    DATE_DIMENSION
              WHERE   DATE_DIMENSION.CALENDAR_DT = TRUNC(TO_DATE('10-06-2019', 'MM-DD-YYYY')))PASS
             )DATE_RANGE ON HSP_ACCT_PX_LIST.PROC_DATE >= DATE_RANGE.BG_DT AND HSP_ACCT_PX_LIST.PROC_DATE < END_DT+1
        LEFT JOIN CLARITY_SER ON HSP_ACCT_PX_LIST.PROC_PERF_PROV_ID = CLARITY_SER.PROV_ID
        LEFT JOIN CLARITY_SER ATND ON  HSP_ACCOUNT.ATTENDING_PROV_ID = ATND.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_PERF ON HSP_ACCT_PX_LIST.PROC_PERF_PROV_ID = PRACT_PERF.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_ATND ON HSP_ACCOUNT.ATTENDING_PROV_ID = PRACT_ATND.PROV_ID
        
WHERE   CLARITY_LOC.LOC_ID = 1084001                            --NYU WINTHROP HOSPITAL
--        AND CL_ICD_PX.REF_BILL_CODE IN ('045Y4ZZ','07BC0ZX','07T90ZZ','07TC0ZZ','07TJ0ZZ','0BBD4ZX','0D938ZZ','0DBG7ZZ',
--                                        '0DBU0ZX','0DBW0ZZ','0DNW0ZZ','0DQ68ZZ','0DTU0ZZ','0DW64UZ','0DW68JZ','0J980ZZ','0J9R0ZZ','0JQC0ZZ',
--                                        '0TBB0ZZ','0TBD0ZZ','0TN60ZZ','0U904ZZ','0U920ZZ','0U9MXZZ','0UB00ZZ','0UB04ZZ','0UB10ZZ','0UB14ZZ','0UB90ZZ','0UB94ZZ','0UB97ZZ',
--                                        '0UB98ZX','0UBC0ZZ','0UBC7ZX','0UBG0ZZ','0UBG7ZX','0UBM0ZZ','0UBMXZZ','0UDB7ZX','0UDB7ZZ','0UDB8ZX','0UDB8ZZ','0UPH4DZ','0UQF0ZZ','0UQG4ZZ','0UT00ZZ',
--                                        '0UT04ZZ','0UT10ZZ','0UT14ZZ','0UT20ZZ','0UT50ZZ','0UT60ZZ','0UT64ZZ','0UT70ZZ','0UT74ZZ','0UT7FZZ','0UT90ZL','0UT90ZZ','0UT94ZL','0UT94ZZ','0UT97ZL','0UT97ZZ',
--                                        '0UT98ZZ','0UT9FZL','0UT9FZZ','0UTC0ZZ','0UUF0JZ','0W3J4ZZ','0WBH0ZZ','0WJJ4ZZ','30233H1')
                                        
--                                        '0D758ZZ','0DB68ZX','0DB98ZX','0DBK8ZX','0DNW4ZZ','0W3P8ZZ','0WQF0ZZ','30233N1',    remoaved 11-19-2019
--                                        '0D598ZZ','0D5A8ZZ','0DB80ZZ','0DBU0ZZ','0DTH0ZZ','0JB80ZZ','0JQ80ZZ','0QBN0ZZ','0SPC0JZ','10E0XZZ','4A1HXCZ','5A1955Z'     removed 11-20-2019
--                                        '10D07Z6' revmoded 12/16/2019
        AND CL_ICD_PX.REF_BILL_CODE NOT IN ('3E0234Z','3E02340','3E033VJ','4A1HXCZ','0VTTXZZ','10D07Z6')
        AND TRUNC(HSP_ACCT_PX_LIST.PROC_DATE) > TRUNC(TO_DATE('10-05-2019', 'MM-DD-YYYY'))      --GO-LIVE 10-6-2019

UNION

SELECT    PATIENT.PAT_MRN_ID
        , HSP_ACCOUNT.PRIM_ENC_CSN_ID
        , HSP_ACCOUNT.HSP_ACCOUNT_ID
        , PATIENT.PAT_NAME
        , HSP_ACCOUNT.ADM_DATE_TIME
        , HSP_ACCT_CPT_CODES.CPT_CODE_DATE
        , HSP_ACCOUNT.DISCH_DATE_TIME
        , HSP_ACCT_CPT_CODES.CPT_CODE
        , HSP_ACCT_CPT_CODES.CPT_CODE_DESC
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END AS PROV_ID
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_NAME ELSE CLARITY_SER.PROV_NAME END AS PROV_NAME
--        , (SELECT   LISTAGG(ZC_SPECIALTY.NAME, ';') WITHIN GROUP (ORDER BY CLARITY_SER_SPEC.LINE)
--           FROM     CLARITY_SER_SPEC
--                    JOIN ZC_SPECIALTY ON CLARITY_SER_SPEC.SPECIALTY_C = ZC_SPECIALTY.SPECIALTY_C
--           WHERE    CLARITY_SER_SPEC.PROV_ID = CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) AS SPEC
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.SPEC ELSE PRACT_PERF.SPEC END AS SPEC
        --BELOW REPLACED WITH A VIEW NYU_WINTHROP_OBGYN_PRACTICE
        --this case statment puts the attending provider into a practice not maintained in epic.  The goal is to not have a provider fall out to the *NOT CATEOGORIEZED part.
--        , CASE WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('809595','865959','865916','801663','807751','808357','866022','806322','803697','804035','865956','866071','866068','4735','866658',
--                                                                                                                       '26226','803372','896590','866691','81532','803594','865668','865318','866663','896989','865994','806129','806842') THEN 'SINGLE PROVIDERS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('865946','802778') THEN 'BEHAR AND LINDER'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('802362','804480','897200','898505') THEN 'BLINDERMAN AND KING'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('805330','5763') THEN 'BYRNE AND SALEH'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('866656','865992') THEN 'DOLISI AND HANAUER'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('821959','865860','27050','27678','26219','27055') THEN 'HOSPITALISTS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('2637','820746','25905','866018') THEN 'HUNTINGTON MEDICAL GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('897745','866660','866662','39508','7653','866052','894068') THEN 'L.I WOMENS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('866549','45693','10044') THEN 'MADONNA PROVIDERS'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('804928','27288') THEN 'MESBAH AND WAT'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('22865','26218','1252','864871','861174','865532','861143','22864','861173','865933','27679','45860','815606') THEN 'MFM'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('866655','805854','813869','866673','7346') THEN 'MILLER/DILENA GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('30674','866674','866672','6955') THEN 'PLANCHER GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('814313','805593') THEN 'ROBERTS AND LAZAROU'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('895288','810027','895419') THEN 'THANUS GROUP'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('34259','865984','10582','865942','865938','866712','804839','865553','865940','866676','20156','894057','895419') THEN 'WCCA'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('848131','865939','890978','37502','13296','894057') THEN 'WINTHROP GYN ONCOLOGY'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('860034','865486','37502') THEN 'WWW'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('865991','17329','894435') THEN 'ZANDIEH AND TUTUNIK'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('42621','866473','896864','821032') THEN 'RSNY'
--               WHEN (CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END) IN ('865686','865683') THEN 'NYU WOWMENS HEALTH NHP'
--               ELSE '*NOT CATEGORIZED' END AS PRACTICE
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.PRACTICE ELSE PRACT_PERF.PRACTICE END AS PRACTICE
        , CASE WHEN CAST(TO_CHAR(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) IN (9,10,11,12) THEN CAST(TO_CHAR(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) - 8 
               ELSE CAST(TO_CHAR(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) + 4 END FY_MTH_SORT
        , CASE WHEN HSP_ACCT_CPT_CODES.CPT_CODE_DATE >= DATE_RANGE.FY_BEG_DT AND HSP_ACCT_CPT_CODES.CPT_CODE_DATE < DATE_RANGE.FY_END_DT+1 THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS FY_HAR
        , CASE WHEN HSP_ACCT_CPT_CODES.CPT_CODE_DATE >= DATE_RANGE.BEG_DATE AND HSP_ACCT_CPT_CODES.CPT_CODE_DATE < END_DT+1 THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS CY_HAR
        , TO_CHAR(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MON') AS MTH
        , CAST(TO_CHAR(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) AS MONTH_NUMBER
        , DATE_RANGE.FY_BEG_DT
        , DATE_RANGE.FY_END_DT
        , CLARITY_DEP.DEPARTMENT_NAME
        , CLARITY_LOC.LOC_NAME
        , 'OP' AS PAT_TYPE
        , ROW_NUMBER() OVER (PARTITION BY HSP_ACCOUNT.HSP_ACCOUNT_ID ORDER BY HSP_ACCT_CPT_CODES.LINE) AS RoNo

FROM    HSP_ACCOUNT 
        JOIN HSP_ACCT_CPT_CODES ON HSP_ACCOUNT.HSP_ACCOUNT_ID = HSP_ACCT_CPT_CODES.HSP_ACCOUNT_ID
        JOIN PATIENT ON HSP_ACCOUNT.PAT_ID = PATIENT.PAT_ID
        JOIN CLARITY_DEP ON HSP_ACCOUNT.DISCH_DEPT_ID = CLARITY_DEP.DEPARTMENT_ID
        JOIN CLARITY_LOC ON CLARITY_DEP.REV_LOC_ID = CLARITY_LOC.LOC_ID
        --This subquery takes the beginning and ending date parameters and converts it to either the earrlier of the calendar year begininng or the fiscal year beginning
        JOIN (SELECT    PASS.*
                      , CASE WHEN PASS.BEG_DATE < PASS.FY_BEG_DT THEN PASS.BEG_DATE ELSE PASS.FY_BEG_DT END BG_DT
              FROM(
              SELECT    DATE_DIMENSION.CALENDAR_DT
                      , DATE_DIMENSION.YEAR_BEGIN_DT
                      , DATE_DIMENSION.MONTH_NUMBER
                      , DATE_DIMENSION.MONTH_NAME
                      , DATE_DIMENSION.MONTH_BEGIN_DT AS PREV_MTH_BEG
                      , DATE_DIMENSION.MONTH_END_DT AS PREV_MTH_END
                      , DATE_DIMENSION.YEAR
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.YEAR + 1 ELSE DATE_DIMENSION.YEAR END AS FISCAL_YEAR
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 THEN DATE_DIMENSION.MONTH_BEGIN_DT
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT - 394
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT - 395
                             ELSE ADD_MONTHS(DATE_DIMENSION.USA_FISCAL_YEAR_BEGIN_DT,-1) END AS FY_BEG_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT + 336
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATE_DIMENSION.USA_FISCAL_YEAR_END_DT + 335
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 THEN DATE_DIMENSION.MONTH_END_DT ELSE ADD_MONTHS(DATE_DIMENSION.USA_FISCAL_YEAR_END_DT,-1) END AS FY_END_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.YEAR_BEGIN_DT
                             ELSE ADD_MONTHS(DATE_DIMENSION.YEAR_BEGIN_DT, -12) END AS BEG_DATE
                      , ADD_MONTHS(DATE_DIMENSION.YEAR_BEGIN_DT, -12) AS CY_BEG_DATE
              FROM    DATE_DIMENSION
              WHERE   DATE_DIMENSION.CALENDAR_DT = BEG_DT)PASS
             )DATE_RANGE ON HSP_ACCT_CPT_CODES.CPT_CODE_DATE >= DATE_RANGE.BG_DT AND HSP_ACCT_CPT_CODES.CPT_CODE_DATE < END_DT+1
        LEFT JOIN CLARITY_SER ON HSP_ACCT_CPT_CODES.CPT_PERF_PROV_ID = CLARITY_SER.PROV_ID
        LEFT JOIN CLARITY_SER ATND ON  HSP_ACCOUNT.ATTENDING_PROV_ID = ATND.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_PERF ON HSP_ACCT_CPT_CODES.CPT_PERF_PROV_ID = PRACT_PERF.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_ATND ON HSP_ACCT_CPT_CODES.CPT_PERF_PROV_ID = PRACT_ATND.PROV_ID

WHERE   CLARITY_LOC.LOC_ID = 1084001                            --NYU WINTHROP HOSPITAL
--        AND HSP_ACCT_CPT_CODES.CPT_CODE IN ('11200','11420','11422','11426','11976','12020','13131','38570','38572','38573','38589','44180','44979','49322','49411',
--                                            '49412','52000','56405','56420','56440','56441','56442','56501','56515','56605','56606','56620','56625','56630','56631','56632','56633','56634','56637','56640','56700','56740',
--                                            '56800','56805','56810','56820','56821','57000','57010','57020','57022','57023','57061','57065','57100','57105','57106','57107','57109','57110','57111','57112','57120','57130',
--                                            '57135','57150','57156','57160','57170','57180','57200','57210','57220','57230','57260','57265','57267','57268','57270','57280','57282','57283','57284',
--                                            '57285','57287','57288','57289','57291','57292','57295','57296','57300','57305','57307','57308','57310','57311','57320','57330','57335','57400','57410','57415','57420','57421',
--                                            '57423','57425','57426','57452','57454','57455','57456','57460','57461','57500','57505','57510','57511','57513','57520','57522','57530','57531','57540','57545','57550','57555',
--                                            '57556','57558','57700','57720','57800','58100','58110','58120','58140','58145','58146','58150','58152','58180','58200','58210','58240','58260','58262','58263','58267','58270',
--                                            '58275','58280','58285','58290','58291','58292','58293','58294','58300','58301','58321','58322','58323','58340','58345','58346','58350','58353','58356','58400','58410','58520',
--                                            '58540','58541','58542','58543','58544','58545','58546','58548','58550','58552','58553','58554','58555','58558','58559','58560','58561','58562','58563','58565','58570','58571',
--                                            '58572','58573','58575','58578','58600','58605','58611','58615','58660','58661','58670','58671','58672','58673','58674','58679','58700','58720','58740','58750','58752',
--                                            '58760','58770','58800','58805','58820','58822','58825','58900','58920','58925','58940','58943','58950','58951','58952','58953','58954','58956','58957','58958','58960')
                                            
--                                          '11421','38571','44970','49321',                  removed 11-19-2019
--                                          '11423','11424','49320','57155','57240','57250','58662',          removed 11-20-2019
        AND TRUNC(HSP_ACCT_CPT_CODES.CPT_CODE_DATE) > TRUNC(TO_DATE('10-05-2019', 'MM-DD-YYYY'))      --GO-LIVE 10-6-2019  
)PASS
WHERE (PASS.SPEC LIKE '%Obstetrics%'
        OR PASS.SPEC LIKE '%Gynecology%')
;

END;
END;
/