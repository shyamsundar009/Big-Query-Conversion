
CREATE PROCEDURE NYU_WINTHROP_OBGYN_PROCEDURES
(
  @BEG_DATE VARCHAR(100),
  @END_DATE VARCHAR(100),
  @P_RECORDSET CURSOR VARYING OUTPUT
)
AS
BEGIN

DECLARE
  @BEG_DT DATE,
  @END_DT DATE;

SET @BEG_DT = CAST(@BEG_DATE AS DATE);
SET @END_DT = CAST(@END_DATE AS DATE); 

SET @P_RECORDSET = CURSOR
FOR
SELECT * FROM(
SELECT    PATIENT.PAT_MRN_ID
        , HSP_ACCOUNT.PRIM_ENC_CSN_ID
        , HSP_ACCOUNT.HSP_ACCOUNT_ID
        , PATIENT.PAT_NAME
        , HSP_ACCOUNT.ADM_DATE_TIME
        , HSP_ACCT_PX_LIST.PROC_DATE
        , HSP_ACCOUNT.DISCH_DATE_TIME
        , CL_ICD_PX.REF_BILL_CODE
        , CL_ICD_PX.PROCEDURE_NAME
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END AS PROV_ID
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_NAME ELSE CLARITY_SER.PROV_NAME END AS PROV_NAME
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.SPEC ELSE PRACT_PERF.SPEC END AS SPEC
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.PRACTICE ELSE PRACT_PERF.PRACTICE END AS PRACTICE
        , CASE WHEN CAST(FORMAT(HSP_ACCT_PX_LIST.PROC_DATE, 'MM') AS INT) IN (9,10,11,12) THEN CAST(FORMAT(HSP_ACCT_PX_LIST.PROC_DATE, 'MM') AS INT) - 8 
               ELSE CAST(FORMAT(HSP_ACCT_PX_LIST.PROC_DATE, 'MM') AS INT) + 4 END FY_MTH_SORT
        , CASE WHEN HSP_ACCT_PX_LIST.PROC_DATE >= DATE_RANGE.FY_BEG_DT AND HSP_ACCT_PX_LIST.PROC_DATE < DATEADD(DAY, 1, DATE_RANGE.FY_END_DT) THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS FY_HAR
        , CASE WHEN HSP_ACCT_PX_LIST.PROC_DATE >= DATE_RANGE.BEG_DATE AND HSP_ACCT_PX_LIST.PROC_DATE < DATEADD(DAY, 1, @END_DT) THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS CY_HAR
        , FORMAT(HSP_ACCT_PX_LIST.PROC_DATE, 'MMM') AS MTH
        , CAST(FORMAT(HSP_ACCT_PX_LIST.PROC_DATE, 'MM') AS INT) AS MONTH_NUMBER
        , DATE_RANGE.FY_BEG_DT
        , DATE_RANGE.FY_END_DT
        , CLARITY_DEP.DEPARTMENT_NAME
        , CLARITY_LOC.LOC_NAME
        , 'IP' AS PAT_TYPE
        , ROW_NUMBER() OVER (PARTITION BY HSP_ACCOUNT.HSP_ACCOUNT_ID ORDER BY HSP_ACCT_PX_LIST.LINE) AS RoNo

FROM    HSP_ACCOUNT 
        JOIN HSP_ACCT_PX_LIST ON HSP_ACCOUNT.HSP_ACCOUNT_ID = HSP_ACCT_PX_LIST.HSP_ACCOUNT_ID
        JOIN CL_ICD_PX ON HSP_ACCT_PX_LIST.FINAL_ICD_PX_ID = CL_ICD_PX.ICD_PX_ID
        JOIN PATIENT ON HSP_ACCOUNT.PAT_ID = PATIENT.PAT_ID
        JOIN CLARITY_DEP ON HSP_ACCOUNT.DISCH_DEPT_ID = CLARITY_DEP.DEPARTMENT_ID
        JOIN CLARITY_LOC ON CLARITY_DEP.REV_LOC_ID = CLARITY_LOC.LOC_ID
        JOIN (SELECT    PASS.*
                      , CASE WHEN PASS.BEG_DATE < PASS.FY_BEG_DT THEN PASS.BEG_DATE ELSE PASS.FY_BEG_DT END BG_DT
              FROM(
              SELECT    DATE_DIMENSION.CALENDAR_DT
                      , DATE_DIMENSION.YEAR_BEGIN_DT
                      , DATE_DIMENSION.MONTH_NUMBER
                      , DATE_DIMENSION.MONTH_NAME
                      , DATE_DIMENSION.MONTH_BEGIN_DT AS PREV_MTH_BEG
                      , DATE_DIMENSION.MONTH_END_DT AS PREV_MTH_END
                      , DATE_DIMENSION.[YEAR]
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.[YEAR] + 1 ELSE DATE_DIMENSION.[YEAR] END AS FISCAL_YEAR
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 THEN DATE_DIMENSION.MONTH_BEGIN_DT
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATEADD(DAY, -394, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT)
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATEADD(DAY, -395, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT)  
                             ELSE DATEADD(MONTH, -1, DATE_DIMENSION.USA_FISCAL_YEAR_BEGIN_DT) END AS FY_BEG_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATEADD(DAY, 336, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT) 
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATEADD(DAY, 335, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT)
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 THEN DATE_DIMENSION.MONTH_END_DT ELSE DATEADD(MONTH, -1, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT) END AS FY_END_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.YEAR_BEGIN_DT
                             ELSE DATEADD(MONTH, -12, DATE_DIMENSION.YEAR_BEGIN_DT) END AS BEG_DATE
                      , DATEADD(MONTH, -12, DATE_DIMENSION.YEAR_BEGIN_DT) AS CY_BEG_DATE
              FROM    DATE_DIMENSION
              WHERE   DATE_DIMENSION.CALENDAR_DT = @BEG_DT)PASS
             )DATE_RANGE ON HSP_ACCT_PX_LIST.PROC_DATE >= DATE_RANGE.BG_DT AND HSP_ACCT_PX_LIST.PROC_DATE < DATEADD(DAY, 1, @END_DT)
        LEFT JOIN CLARITY_SER ON HSP_ACCT_PX_LIST.PROC_PERF_PROV_ID = CLARITY_SER.PROV_ID
        LEFT JOIN CLARITY_SER ATND ON  HSP_ACCOUNT.ATTENDING_PROV_ID = ATND.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_PERF ON HSP_ACCT_PX_LIST.PROC_PERF_PROV_ID = PRACT_PERF.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_ATND ON HSP_ACCOUNT.ATTENDING_PROV_ID = PRACT_ATND.PROV_ID
        
WHERE   CLARITY_LOC.LOC_ID = 1084001                            --NYU WINTHROP HOSPITAL
        AND CL_ICD_PX.REF_BILL_CODE NOT IN ('3E0234Z','3E02340','3E033VJ','4A1HXCZ','0VTTXZZ','10D07Z6')
        AND HSP_ACCT_PX_LIST.PROC_DATE > CAST('10-05-2019' AS DATE)      --GO-LIVE 10-6-2019

UNION

SELECT    PATIENT.PAT_MRN_ID
        , HSP_ACCOUNT.PRIM_ENC_CSN_ID
        , HSP_ACCOUNT.HSP_ACCOUNT_ID
        , PATIENT.PAT_NAME
        , HSP_ACCOUNT.ADM_DATE_TIME
        , HSP_ACCT_CPT_CODES.CPT_CODE_DATE
        , HSP_ACCOUNT.DISCH_DATE_TIME
        , HSP_ACCT_CPT_CODES.CPT_CODE
        , HSP_ACCT_CPT_CODES.CPT_CODE_DESC
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_ID ELSE CLARITY_SER.PROV_ID END AS PROV_ID
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN ATND.PROV_NAME ELSE CLARITY_SER.PROV_NAME END AS PROV_NAME
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.SPEC ELSE PRACT_PERF.SPEC END AS SPEC
        , CASE WHEN CLARITY_SER.PROVIDER_TYPE_C = '113' THEN PRACT_ATND.PRACTICE ELSE PRACT_PERF.PRACTICE END AS PRACTICE
        , CASE WHEN CAST(FORMAT(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) IN (9,10,11,12) THEN CAST(FORMAT(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) - 8 
               ELSE CAST(FORMAT(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) + 4 END FY_MTH_SORT
        , CASE WHEN HSP_ACCT_CPT_CODES.CPT_CODE_DATE >= DATE_RANGE.FY_BEG_DT AND HSP_ACCT_CPT_CODES.CPT_CODE_DATE < DATEADD(DAY, 1, DATE_RANGE.FY_END_DT) THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS FY_HAR
        , CASE WHEN HSP_ACCT_CPT_CODES.CPT_CODE_DATE >= DATE_RANGE.BEG_DATE AND HSP_ACCT_CPT_CODES.CPT_CODE_DATE < DATEADD(DAY, 1, @END_DT) THEN HSP_ACCOUNT.HSP_ACCOUNT_ID END AS CY_HAR
        , FORMAT(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MMM') AS MTH
        , CAST(FORMAT(HSP_ACCT_CPT_CODES.CPT_CODE_DATE, 'MM') AS INT) AS MONTH_NUMBER
        , DATE_RANGE.FY_BEG_DT
        , DATE_RANGE.FY_END_DT
        , CLARITY_DEP.DEPARTMENT_NAME
        , CLARITY_LOC.LOC_NAME
        , 'OP' AS PAT_TYPE
        , ROW_NUMBER() OVER (PARTITION BY HSP_ACCOUNT.HSP_ACCOUNT_ID ORDER BY HSP_ACCT_CPT_CODES.LINE) AS RoNo

FROM    HSP_ACCOUNT 
        JOIN HSP_ACCT_CPT_CODES ON HSP_ACCOUNT.HSP_ACCOUNT_ID = HSP_ACCT_CPT_CODES.HSP_ACCOUNT_ID
        JOIN PATIENT ON HSP_ACCOUNT.PAT_ID = PATIENT.PAT_ID
        JOIN CLARITY_DEP ON HSP_ACCOUNT.DISCH_DEPT_ID = CLARITY_DEP.DEPARTMENT_ID
        JOIN CLARITY_LOC ON CLARITY_DEP.REV_LOC_ID = CLARITY_LOC.LOC_ID
        JOIN (SELECT    PASS.*
                      , CASE WHEN PASS.BEG_DATE < PASS.FY_BEG_DT THEN PASS.BEG_DATE ELSE PASS.FY_BEG_DT END BG_DT
              FROM(
              SELECT    DATE_DIMENSION.CALENDAR_DT
                      , DATE_DIMENSION.YEAR_BEGIN_DT
                      , DATE_DIMENSION.MONTH_NUMBER
                      , DATE_DIMENSION.MONTH_NAME
                      , DATE_DIMENSION.MONTH_BEGIN_DT AS PREV_MTH_BEG
                      , DATE_DIMENSION.MONTH_END_DT AS PREV_MTH_END
                      , DATE_DIMENSION.[YEAR]
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.[YEAR] + 1 ELSE DATE_DIMENSION.[YEAR] END AS FISCAL_YEAR
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 THEN DATE_DIMENSION.MONTH_BEGIN_DT
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATEADD(DAY, -394, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT)
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATEADD(DAY, -395, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT)
                             ELSE DATEADD(MONTH, -1, DATE_DIMENSION.USA_FISCAL_YEAR_BEGIN_DT) END AS FY_BEG_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'N' THEN DATEADD(DAY, 336, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT) 
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 9 AND DATE_DIMENSION.LEAP_YEAR_YN = 'Y' THEN DATEADD(DAY, 335, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT)
                             WHEN DATE_DIMENSION.MONTH_NUMBER = 8 THEN DATE_DIMENSION.MONTH_END_DT ELSE DATEADD(MONTH, -1, DATE_DIMENSION.USA_FISCAL_YEAR_END_DT) END AS FY_END_DT
                      , CASE WHEN DATE_DIMENSION.MONTH_NUMBER BETWEEN 9 AND 12 THEN DATE_DIMENSION.YEAR_BEGIN_DT
                             ELSE DATEADD(MONTH, -12, DATE_DIMENSION.YEAR_BEGIN_DT) END AS BEG_DATE
                      , DATEADD(MONTH, -12, DATE_DIMENSION.YEAR_BEGIN_DT) AS CY_BEG_DATE
              FROM    DATE_DIMENSION
              WHERE   DATE_DIMENSION.CALENDAR_DT = @BEG_DT)PASS
             )DATE_RANGE ON HSP_ACCT_CPT_CODES.CPT_CODE_DATE >= DATE_RANGE.BG_DT AND HSP_ACCT_CPT_CODES.CPT_CODE_DATE < DATEADD(DAY, 1, @END_DT)
        LEFT JOIN CLARITY_SER ON HSP_ACCT_CPT_CODES.CPT_PERF_PROV_ID = CLARITY_SER.PROV_ID
        LEFT JOIN CLARITY_SER ATND ON  HSP_ACCOUNT.ATTENDING_PROV_ID = ATND.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_PERF ON HSP_ACCT_CPT_CODES.CPT_PERF_PROV_ID = PRACT_PERF.PROV_ID
        LEFT JOIN NYU_WINTHROP_OBGYN_PRACTICE PRACT_ATND ON HSP_ACCT_CPT_CODES.CPT_PERF_PROV_ID = PRACT_ATND.PROV_ID

WHERE   CLARITY_LOC.LOC_ID = 1084001                            --NYU WINTHROP HOSPITAL
        AND HSP_ACCT_CPT_CODES.CPT_CODE_DATE > CAST('10-05-2019' AS DATE)      --GO-LIVE 10-6-2019  
)PASS
WHERE (PASS.SPEC LIKE '%Obstetrics%'
        OR PASS.SPEC LIKE '%Gynecology%')
;

OPEN @P_RECORDSET;
END
